{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","serviceWorker.js","index.js","robots.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","key","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","erro","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","username","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5d415cf4.chunk.js","sourcesContent":["import React from 'react';\nconst Card = ({name, email, id}) => {\n\treturn (\t\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n\t\t\t<img alt='robots' src ={`https://robohash.org/${id}?200x200`}/>\n\t\t\t<div>\n\t\t\t\t<h2>{name}</h2>\n\t\t\t\t<p>{email}</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({robots}) =>{\n\treturn(\n\t<div>\n\t   \t{\n\t   \t\trobots.map((user, i) =>{\n\t\t\t\treturn(\n\t\t\t\t\t<Card\n\t\t\t\t \tkey={i}\n\t\t\t\t \tid={robots[i].id}\n\t\t\t\t\tname={robots[i].name}\n\t\t\t\t \temail={robots[i].email}\n\t\t\t \t\t/>\n\t\t\t\t);\n\t\t\t})\n\t   \t}\n   </div>\n   );\n}\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchField, searchChange}) =>{\n\treturn (\n\t\t<div className='pa2'>\n\t\t\t<input\n\t\t\t\tclassName='pa3 ba b--greem bg-lightest-blue'\n\t\t\t\ttype='search'\n\t\t\t\tplaceholder='search robots'\n\t\t\t\tonChange={searchChange}\n\t\t\t/>\n\t\t</div>\n\t);\n}\nexport default SearchBox;","import React from 'react'\n\nconst Scroll = (props) => {\n\treturn(\n\t\t<div style={{overflowY : 'scroll', border: '0px solid black', height:'500px'}}>\n\t\t\t{props.children}\n\t\t</div>\n\t)\n}\n\nexport default Scroll;","import React, {Component} from 'react';\n\nclass ErrorBoundary extends Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thasError : false\n\t\t}\n\t}\n\tcomponentDidCatch(erro, info){\n\t\tthis.setState({hasError:true})\n\t}\n\trender(){\n\t\tif (this.state.hasError) {\n\t\t\treturn <h1>Ooooops. That is not good</h1>\n\t\t}\n\t\treturn this.props.children\n\t}\n}\n\nexport default ErrorBoundary;","import React, {Component} from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport '../components/Scroll.css';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport './App.css';\n\nclass App extends Component{\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\trobots:[],\n\t\t\tsearchfield:''\n\t\t}\n\t}\n\tcomponentDidMount()\n\t{\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t.then(response => response.json())\n\t\t.then(users => this.setState({robots:users}));\n\t}\n\tonSearchChange = (event) => {\n\t\tthis.setState({searchfield:event.target.value})\n\t}\n\trender() {\n\t\tconst {robots, searchfield} = this.state;\n\t\tconst filteredRobots = robots.filter(robot =>{\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\n\t\t})\n\t\treturn !robots.length?\n\t\t\t <h1 className='tc'>Loading</h1>:\n\t\t\t<div className='tc'>\n\t\t\t\t<h1 className='f1'>RoboFriends</h1>\n\t\t\t\t<SearchBox searchChange ={this.onSearchChange}/>\n\t\t\t\t<Scroll>\n\t\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t\t<CardList robots={filteredRobots}/>\n\t\t\t\t\t</ErrorBoundary>\n\t\t\t\t</Scroll>\n\t\t\t</div>\n\t}\n}\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\nimport {robots} from './robots';\n\nReactDOM.render(\n  <React.StrictMode>\n  <App robots={robots}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const robots = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz'\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv'\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net'\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org'\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca'\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info'\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz'\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me'\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io'\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz'\n  }\n];"],"sourceRoot":""}